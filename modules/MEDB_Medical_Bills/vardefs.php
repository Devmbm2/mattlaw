<?php
/**
 *
 * SugarCRM Community Edition is a customer relationship management program developed by
 * SugarCRM, Inc. Copyright (C) 2004-2013 SugarCRM Inc.
 *
 * SuiteCRM is an extension to SugarCRM Community Edition developed by SalesAgility Ltd.
 * Copyright (C) 2011 - 2017 SalesAgility Ltd.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by the
 * Free Software Foundation with the addition of the following permission added
 * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
 * IN WHICH THE COPYRIGHT IS OWNED BY SUGARCRM, SUGARCRM DISCLAIMS THE WARRANTY
 * OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License along with
 * this program; if not, see http://www.gnu.org/licenses or write to the Free
 * Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 *
 * You can contact SugarCRM, Inc. headquarters at 10050 North Wolfe Road,
 * SW2-130, Cupertino, CA 95014, USA. or at email address contact@sugarcrm.com.
 *
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License version 3,
 * these Appropriate Legal Notices must retain the display of the "Powered by
 * SugarCRM" logo and "Supercharged by SuiteCRM" logo. If the display of the logos is not
 * reasonably feasible for  technical reasons, the Appropriate Legal Notices must
 * display the words  "Powered by SugarCRM" and "Supercharged by SuiteCRM".
 */

$dictionary['MEDB_Medical_Bills'] = array(
    'table' => 'medb_medical_bills',
    'audited' => true,
    'inline_edit' => true,
    'full_text_search' => true,
    'unified_search_default_enabled' => true,
    'fields' => array (
  'adjustments' => 
  array (
    'required' => false,
    'name' => 'adjustments',
    'vname' => 'LBL_ADJUSTMENTS',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'currency_id' => 
  array (
    'required' => false,
    'name' => 'currency_id',
    'vname' => 'LBL_CURRENCY',
    'type' => 'currency_id',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => 0,
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 36,
    'size' => '20',
    'dbType' => 'id',
    'studio' => 'visible',
    'function' => 
    array (
      'name' => 'getCurrencyDropDown',
      'returns' => 'html',
    ),
  ),
  'amount_jury_sees' => 
  array (
    'required' => false,
    'name' => 'amount_jury_sees',
    'vname' => 'LBL_AMOUNT_JURY_SEES',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => 'subtract($total_charges,$copy_charges)',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'balance' => 
  array (
    'required' => false,
    'name' => 'balance',
    'vname' => 'LBL_BALANCE',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => 'subtract($total_charges,$copy_charges,$pip_paid,$medicare_paid,$medicaid_paid,$health_insurance_paid,$adjustments,$client_paid,$reduction_amount)',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'client_paid' => 
  array (
    'required' => false,
    'name' => 'client_paid',
    'vname' => 'LBL_CLIENT_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'copy_charges' => 
  array (
    'required' => false,
    'name' => 'copy_charges',
    'vname' => 'LBL_COPY_CHARGES',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'health_insurance_paid' => 
  array (
    'required' => false,
    'name' => 'health_insurance_paid',
    'vname' => 'LBL_HEALTH_INSURANCE_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'lop_lien' => 
  array (
    'required' => false,
    'name' => 'lop_lien',
    'vname' => 'LBL_LOP_LIEN',
    'type' => 'bool',
    'massupdate' => 0,
    'default' => '0',
    'no_default' => false,
    'comments' => '',
    'help' => 'Check the box if the medical bill is from a Lien Holder',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
  ),
  'medicaid_paid' => 
  array (
    'required' => false,
    'name' => 'medicaid_paid',
    'vname' => 'LBL_MEDICAID_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'pip_paid' => 
  array (
    'required' => false,
    'name' => 'pip_paid',
    'vname' => 'LBL_PIP_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'reduction_amount' => 
  array (
    'required' => false,
    'name' => 'reduction_amount',
    'vname' => 'LBL_REDUCTION_AMOUNT',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => 'If the provider reduced, put the amount they reduced by here',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
 'workers_comp_paid' =>
  array (
    'required' => false,
    'name' => 'workers_comp_paid',
    'vname' => 'LBL_WORKERS_COMP_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'account_id_c' => 
  array (
    'required' => false,
    'name' => 'account_id_c',
    'vname' => 'LBL_MEDICAL_PROVIDER_ACCOUNT_ID',
    'type' => 'id',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => 0,
    'audited' => false,
    'inline_edit' => true,
    'reportable' => false,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 36,
    'size' => '20',
  ),
  'medical_provider_account' => 
  array (
	'name' => 'medical_provider_account',
	'type' => 'link',
	'relationship' => 'medical_provider_account',
	'source'=>'non-db',
	'vname'=>'LBL_MEDICAL_PROVIDER_ACCOUNT'
	),
  'medical_provider' => 
  array (
    'link' => 'medical_provider_account',
    'required' => false,
    'source' => 'non-db',
    'name' => 'medical_provider',
    'vname' => 'LBL_MEDICAL_PROVIDER',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'name',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ),
  'medp_billing_address_street' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medp_billing_address_street',
    'vname' => 'LBL_MEDP_BILLING_ADDRESS_STREET',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'billing_address_street',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ), 
  'medp_billing_address_city' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medp_billing_address_city',
    'vname' => 'LBL_MEDP_BILLING_ADDRESS_CITY',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'billing_address_city',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ),
  'medp_billing_address_state' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medp_billing_address_state',
    'vname' => 'LBL_MEDP_BILLING_ADDRESS_STATE',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'billing_address_state',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ),
  
  'medp_billing_address_postalcode' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medp_billing_address_postalcode',
    'vname' => 'LBL_MEDP_BILLING_ADDRESS_STATE',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'billing_address_postalcode',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ),
  'medp_fax' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medp_fax',
    'vname' => 'LBL_MEDP_FAX',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'account_id_c',
    'ext2' => 'Accounts',
    'module' => 'Accounts',
    'rname' => 'phone_fax',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ), 
  'medb_case_date_of_incident' => 
  array (
    'required' => false,
    'source' => 'non-db',
    'name' => 'medb_case_date_of_incident',
    'vname' => 'LBL_MEDB_CASES_DATE_OF_INCIDENT',
    'type' => 'relate',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '255',
    'size' => '20',
    'id_name' => 'acase_id_c',
    'ext2' => 'Cases',
    'module' => 'Cases',
    'rname' => 'date_of_incident_c',
    'quicksearch' => 'enabled',
    'studio' => 'visible',
  ),
  'medicare_paid' => 
  array (
    'required' => false,
    'name' => 'medicare_paid',
    'vname' => 'LBL_MEDICARE_PAID',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'reduction_approved_by' => 
  array (
    'required' => false,
    'name' => 'reduction_approved_by',
    'vname' => 'LBL_REDUCTION_APPROVED_BY',
    'type' => 'varchar',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => 'greaterThan($reduction_amount,0.00)',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => '20',
    'size' => '20',
  ),
  'total_charges' => 
  array (
    'required' => false,
    'name' => 'total_charges',
    'vname' => 'LBL_TOTAL_CHARGES',
    'type' => 'currency',
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'reportable' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'len' => 26,
    'size' => '20',
    'enable_range_search' => false,
    'precision' => 6,
  ),
  'status_id' => 
  array (
    'name' => 'status_id',
    'vname' => 'LBL_DOC_STATUS',
    'type' => 'enum',
    'len' => 100,
    'options' => 'medb_status_list',
    'reportable' => true,
    'required' => false,
    'massupdate' => 0,
    'no_default' => false,
    'comments' => '',
    'help' => '',
    'importable' => 'true',
    'duplicate_merge' => 'disabled',
    'duplicate_merge_dom_value' => '0',
    'audited' => false,
    'inline_edit' => true,
    'unified_search' => false,
    'merge_filter' => 'disabled',
    'size' => '20',
    'studio' => 'visible',
    'dependency' => false,
  ),
  'adjuster_name' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_name',
    'vname'     => 'LBL_ADJUSTER_NAME',
    'type'      => 'relate',
    'rname'     => 'name',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ), 
	'adjuster_dear' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_dear',
    'vname'     => 'LBL_ADJUSTER_NAME',
    'type'      => 'relate',
    'rname'     => 'dear_c',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ), 
'adjuster_fax' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_fax',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'phone_fax',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ),
	
	'adjuster_primary_address_postalcode' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_primary_address_postalcode',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'primary_address_postalcode',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ),
	'adjuster_primary_address_state' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_primary_address_state',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'primary_address_state',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ),
	'adjuster_primary_address_city' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_primary_address_city',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'primary_address_city',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ),
	'adjuster_primary_address_street' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'adjuster_primary_address_street',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'primary_address_street',
    'id_name'   => 'adjuster_id',
    'table'     => 'contacts',
    'isnull'    => 'true',
    'module'    => 'Contacts',
    ),
'adjuster_id' => array(
    'name'              => 'adjuster_id',
    'rname'             => 'id',
    'vname'             => 'LBL_ADJUSTER_ID',
    'type'              => 'id',
    'table'             => 'contacts',
    'isnull'            => 'true',
    'module'            => 'Contacts',
    'dbType'            => 'id',
    'reportable'        => false,
    'massupdate'        => false,
    'duplicate_merge'   => 'disabled',
    ),
	'case_date_of_incident' => array(
    'required'  => false,
    'source'    => 'non-db',
    'name'      => 'case_date_of_incident',
    'vname'     => 'LBL_ADJUSTER_FAX',
    'type'      => 'relate',
    'rname'     => 'date_of_incident_c',
    'id_name'   => 'acase_id_c',
    'table'     => 'cases',
    'isnull'    => 'true',
    'module'    => 'Cases',
    ),
 'claim_number' => 
	  array (
		'required' => false,
		'name' => 'claim_number',
		'vname' => 'LBL_CLAIM_NUMBER',
		'type' => 'varchar',
		),
	'medb_medical_bills_documents_reductions' => array(
		'name' => 'medb_medical_bills_documents_reductions',
		'type' => 'link',
		'relationship' => 'medb_medical_bills_documents_reductions',
		'source'=>'non-db',
		'vname'=>'LBL_MEDB_MEDICAL_BILLS_DOCUMENTS_REDUCTIONS'
		),
),
    'relationships' => array (
		'medb_medical_bills_documents_reductions' => array(
			'lhs_module'=> 'MEDB_Medical_Bills',
			'lhs_table'=> 'medb_medical_bills',
			'lhs_key' => 'id', 
			'rhs_module'=> 'Documents',
			'rhs_table'=> 'documents',
			'rhs_key' => 'medb_medical_bills_id',
			'relationship_type'=>'one-to-many',
		),
),
    'optimistic_locking' => true,
    'unified_search' => true,
);
if (!class_exists('VardefManager')) {
        require_once('include/SugarObjects/VardefManager.php');
}
VardefManager::createVardef('MEDB_Medical_Bills', 'MEDB_Medical_Bills', array('basic','assignable','security_groups','file'));
