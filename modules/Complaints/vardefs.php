<?php
if (!defined('sugarEntry') || !sugarEntry) {
    die('Not A Valid Entry Point');
}

$dictionary['Complaint'] = array(
    'table' => 'complaints',
    'audited' => true,
    'unified_search' => true,
    'full_text_search' => true,
    'unified_search_default_enabled' => true,
    'duplicate_merge' => true,
    'comment' => 'Complaints are issues or problems that a customer asks a support representative to resolve',
    'fields' => array(
        'suggestion_box' => array(
            'name' => 'suggestion_box',
            'vname' => 'LBL_SUGGESTION_BOX',
            'type' => 'readonly',
            'source' => 'non-db',
        ),
        'description' => array(
            'name' => 'description',
            'vname' => 'LBL_DESCRIPTION',
            'type' => 'text',
            'editor' => 'html',
            'comment' => 'Full text of the description',
            'rows' => 6,
            'cols' => 80,
        ),

        'account_name' => array(
            'name' => 'account_name',
            'rname' => 'name',
            'id_name' => 'account_id',
            'vname' => 'LBL_ACCOUNT_NAME',
            'type' => 'relate',
            'link' => 'accounts',
            'table' => 'accounts',
            'join_name' => 'accounts',
            'isnull' => 'true',
            'module' => 'Accounts',
            'dbType' => 'varchar',
            'len' => 100,
            'source' => 'non-db',
            'unified_search' => true,
            'comment' => 'The name of the account represented by the account_id field',
            'required' => false,
            //'importable' => 'required',
        ),
        'account_name1' => array(
            'name' => 'account_name1',
            'source' => 'non-db',
            'type' => 'text',
            'len' => 100,
            'importable' => 'false',
            'studio' => array("formula" => false),
        ),
        'account_id' => array(
            'name' => 'account_id',
            'type' => 'relate',
            'dbType' => 'id',
            'rname' => 'id',
            'module' => 'Accounts',
            'id_name' => 'account_id',
            'reportable' => false,
            'vname' => 'LBL_ACCOUNT_ID',
            'audited' => true,
            'massupdate' => false,
            'comment' => 'The account to which the complaint is associated'
        ),

        'state' => array(
            'name' => 'state',
            'vname' => 'LBL_STATE',
            'type' => 'enum',
            'options' => 'complaint_state_dom',
            'len' => 100,
            'audited' => true,
            'comment' => 'The state of the complaint (i.e. open/closed)',
            'default' => 'Open',
            'parentenum' => 'status',
            'merge_filter' => 'disabled',
        ),
        'status' => array(
            'name' => 'status',
            'vname' => 'LBL_STATUS',
            'type' => 'dynamicenum',
            'options' => 'complaint_status_dom',
            'len' => 100,
            'audited' => true,
            'comment' => 'The status of the complaint',
            'dbtype' => 'enum',
            'parentenum' => 'state',
        ),
        'priority' => array(
            'name' => 'priority',
            'vname' => 'LBL_PRIORITY',
            'type' => 'enum',
            'options' => 'complaint_priority_dom',
            'len' => 100,
            'audited' => true,
            'comment' => 'The priority of the complaint',

        ),
        'resolution' => array(
            'name' => 'resolution',
            'vname' => 'LBL_RESOLUTION',
            'type' => 'text',
            'comment' => 'The resolution of the complaint',
            'rows' => 6,
            'cols' => 80,
        ),
        'complaint_attachments_display' => array(
            'required' => false,
            'name' => 'complaint_attachments_display',
            'vname' => 'LBL_COMPLAINT_ATTACHMENTS_DISPLAY',
            'type' => 'function',
            'source' => 'non-db',
            'massupdate' => 0,
            'studio' => 'visible',
            'importable' => 'false',
            'duplicate_merge' => 'disabled',
            'duplicate_merge_dom_value' => 0,
            'audited' => false,
            'reportable' => false,
            'function' => array(
                'name' => 'display_complaint_attachments_comp',
                'returns' => 'html',
                'include' => 'modules/AOP_Complaint_Updates/Complaint_Updates.php',
            ),
        ),
        'complaint_update_form' => array(
            'required' => false,
            'name' => 'complaint_update_form',
            'vname' => 'LBL_COMPLAINT_UPDATE_FORM',
            'type' => 'function',
            'source' => 'non-db',
            'massupdate' => 0,
            'studio' => 'visible',
            'importable' => 'false',
            'duplicate_merge' => 'disabled',
            'duplicate_merge_dom_value' => 0,
            'audited' => false,
            'reportable' => false,
            'function' => array(
                'name' => 'display_update_form_comp',
                'returns' => 'html',
                'include' => 'modules/AOP_Complaint_Updates/Complaint_Updates.php',
            ),
        ),
        'contact_created_by' => array(
            'name' => 'contact_created_by',
            'type' => 'link',
            'relationship' => 'complaints_created_contact',
            'module' => 'Contacts',
            'bean_name' => 'Contact',
            'link_type' => 'one',
            'source' => 'non-db',
            'vname' => 'LBL_CONTACT_CREATED_BY',
            'side' => 'left',
            'id_name' => 'contact_created_by_id',
        ),
        'contact_created_by_name' => array(
            'name' => 'contact_created_by_name',
            'type' => 'relate',
            'source' => 'non-db',
            'vname' => 'LBL_CONTACT_CREATED_BY_NAME',
            'save' => true,
            'id_name' => 'contact_created_by_id',
            'link' => 'complaints_created_contact',
            'table' => 'Contacts',
            'module' => 'Contacts',
            'rname' => 'name',
        ),
        'contact_created_by_id' => array(
            'name' => 'contact_created_by_id',
            'type' => 'id',
            'reportable' => false,
            'vname' => 'LBL_CONTACT_CREATED_BY_ID',
        ),

        'tasks' => array(
            'name' => 'tasks',
            'type' => 'link',
            'relationship' => 'complaint_tasks',
            'source' => 'non-db',
            'vname' => 'LBL_TASKS',
        ),
        'notes' => array(
            'name' => 'notes',
            'type' => 'link',
            'relationship' => 'complaint_notes',
            'source' => 'non-db',
            'vname' => 'LBL_NOTES',
        ),
        'meetings' => array(
            'name' => 'meetings',
            'type' => 'link',
            'relationship' => 'complaint_meetings',
            'bean_name' => 'Meeting',
            'source' => 'non-db',
            'vname' => 'LBL_MEETINGS',
        ),
        'emails' => array(
            'name' => 'emails',
            'type' => 'link',
            'relationship' => 'emails_complaints_rel',
            'source' => 'non-db',
            'vname' => 'LBL_EMAILS',
        ),
        'documents' => array(
            'name' => 'documents',
            'type' => 'link',
            'relationship' => 'documents_complaints',
            'source' => 'non-db',
            'vname' => 'LBL_DOCUMENTS_SUBPANEL_TITLE',
        ),
        'calls' => array(
            'name' => 'calls',
            'type' => 'link',
            'relationship' => 'complaint_calls',
            'source' => 'non-db',
            'vname' => 'LBL_CALLS',
        ),
        'bugs' => array(
            'name' => 'bugs',
            'type' => 'link',
            'relationship' => 'complaints_bugs',
            'source' => 'non-db',
            'vname' => 'LBL_BUGS',
        ),
        'contacts' => array(
            'name' => 'contacts',
            'type' => 'link',
            'relationship' => 'contacts_complaints',
            'source' => 'non-db',
            'vname' => 'LBL_CONTACTS',
        ),
        'accounts' => array(
            'name' => 'accounts',
            'type' => 'link',
            'relationship' => 'account_complaints',
            'link_type' => 'one',
            'side' => 'right',
            'source' => 'non-db',
            'vname' => 'LBL_ACCOUNT',
        ),
        'project' => array(
            'name' => 'project',
            'type' => 'link',
            'relationship' => 'projects_complaints',
            'source' => 'non-db',
            'vname' => 'LBL_PROJECTS',
        ),
        'update_text' => array(
            'required' => false,
            'name' => 'update_text',
            'vname' => 'LBL_UPDATE_TEXT',
            'source' => 'non-db',
            'type' => 'text',
            'editor' => 'html',
            'massupdate' => '0',
            'default' => '',
            'no_default' => false,
            'comments' => '',
            'help' => '',
            'importable' => 'true',
            'duplicate_merge' => 'disabled',
            'duplicate_merge_dom_value' => '0',
            'audited' => false,
            'reportable' => true,
            'unified_search' => false,
            'merge_filter' => 'disabled',
            'size' => '20',
            'studio' => 'visible',
            'rows' => 6,
            'cols' => 80,
            'id' => 'Complaintsupdate_text',
        ),
        'internal' => array(
            'name' => 'internal',
            'source' => 'non-db',
            'vname' => 'LBL_INTERNAL',
            'type' => 'bool',
            'studio' => 'visible',
        ),
        'aop_complaint_updates_threaded' => array(
            'required' => false,
            'name' => 'aop_complaint_updates_threaded',
            'vname' => 'LBL_AOP_COMPLAINT_UPDATES_THREADED',
            'type' => 'function',
            'source' => 'non-db',
            'massupdate' => 0,
            'studio' => 'visible',
            'importable' => 'false',
            'duplicate_merge' => 'disabled',
            'duplicate_merge_dom_value' => 0,
            'audited' => false,
            'reportable' => false,
            'inline_edit' => 0,
            'function' => array(
                'name' => 'display_updates_comp',
                'returns' => 'html',
                'include' => 'modules/AOP_Complaint_Updates/Complaint_Updates.php',
            ),
        ),
        'aop_complaint_updates' => array(
            'name' => 'aop_complaint_updates',
            'type' => 'link',
            'relationship' => 'complaints_aop_complaint_updates',
            'source' => 'non-db',
            'id_name' => 'complaint_id',
            'vname' => 'LBL_AOP_COMPLAINT_UPDATES',
        ),
        'aop_complaint_events' => array(
            'name' => 'aop_complaint_events',
            'type' => 'link',
            'relationship' => 'complaints_aop_complaint_events',
            'source' => 'non-db',
            'id_name' => 'complaint_id',
            'vname' => 'LBL_AOP_COMPLAINT_EVENTS',
        ),
		'country' => array(
			'name' => 'country',
			'type' => 'varchar',
			'vname' => 'LBL_COUNTRY',
		),
		'um_owner_date_we_filed_crn' => array(
			'name' => 'um_owner_date_we_filed_crn',
			'type' => 'varchar',
			'vname' => 'LBL_UM_OWNER_DATE_WE_FILED_CRN',
		),
		'ada_coordinator' => array(
			'name' => 'ada_coordinator',
			'type' => 'varchar',
			'vname' => 'LBL_ADA_COORDINATOR',
		),
	'um_driver_insured_name' => 
		array (
		  'inline_edit' => '1',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'um_driver_insured_name',
		  'vname' => 'LBL_UM_DRIVER_INSURED_NAME_1',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'um_driver_insured_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	'um_driver_insured_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'um_driver_insured_id',
		  'vname' => 'LBL_UM_DRIVER_INSURED_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '36',
		  'size' => '20',
		),
	'um_owner_named_insured' => 
		array (
		  'inline_edit' => '1',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'um_owner_named_insured',
		  'vname' => 'LBL_UM_OWNER_NAMED_INSURED',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'um_owner_named_insured_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	'um_owner_named_insured_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'um_owner_named_insured_id',
		  'vname' => 'LBL_UM_OWNER_NAMED_INSURED_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '36',
		  'size' => '20',
		),
	'shipping_address_street' => 
		array (
		  'name' => 'shipping_address_street',
		  'vname' => 'LBL_SHIPPING_ADDRESS_STREET',
		  'type' => 'varchar',
		  'len' => '255',
		  'group' => 'shipping_address',
		  'comment' => 'The street address used for for shipping purposes',
		  'merge_filter' => 'disabled',
		  'inline_edit' => true,
		  'comments' => 'The street address used for the Registered Agent',
		),  
	'shipping_address_city' => 
		array (
		  'name' => 'shipping_address_city',
		  'vname' => 'LBL_SHIPPING_ADDRESS_CITY',
		  'type' => 'varchar',
		  'len' => 100,
		  'group' => 'shipping_address',
		  'comment' => 'The city used for the shipping address',
		  'merge_filter' => 'disabled',
		  'inline_edit' => true,
		  'comments' => 'The City where the Registered Agent\'s office is for Service of Papers',
		),
	'shipping_address_state' => 
		array (
		  'name' => 'shipping_address_state',
		  'vname' => 'LBL_SHIPPING_ADDRESS_STATE',
		  'type' => 'varchar',
		  'len' => 100,
		  'group' => 'shipping_address',
		  'comment' => 'The state used for the shipping address',
		  'merge_filter' => 'disabled',
		  'inline_edit' => true,
		  'comments' => 'The state used for the Registered Agent',
		),
	'shipping_address_postalcode' => 
		array (
		  'name' => 'shipping_address_postalcode',
		  'vname' => 'LBL_SHIPPING_ADDRESS_POSTALCODE',
		  'type' => 'varchar',
		  'len' => 20,
		  'group' => 'shipping_address',
		  'comment' => 'The zip code used for the shipping address',
		  'merge_filter' => 'disabled',
		  'inline_edit' => true,
		  'comments' => 'The zip code used for the Registered Agent',
		),
	'shipping_address_country' => 
		array (
		  'name' => 'shipping_address_country',
		  'vname' => 'LBL_SHIPPING_ADDRESS_COUNTRY',
		  'type' => 'varchar',
		  'group' => 'shipping_address',
		  'comment' => 'The country used for the shipping address',
		  'merge_filter' => 'disabled',
		  'inline_edit' => true,
		  'comments' => 'The country used for Service of Process on the Registered Agent',
		),
	'owner_bad_vehicle_1_name_contact' => 
		array (
		  'inline_edit' => '1',
		  'populate_list' => 
		  array (
			0 => 'fml_name',
			1 => 'id',
			2 => 'middle_name',
			3 => 'full_address',
		  ),
		  'field_list' => 
		  array (
			0 => 'owner_bad_vehicle_1_name_contact',
			1 => 'owner_bad_vehicle_1_name_contact_id',
			2 => 'z_owner_bad_vehicle_1_nickna_c',
			3 => 'z_owner_bad_vehicle_1_addres_c',
		  ),
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'owner_bad_vehicle_1_name_contact',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_1_NAME_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'owner_bad_vehicle_1_name_contact_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'fml_name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	'owner_bad_vehicle_1_name_contact_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'owner_bad_vehicle_1_name_contact_id',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_1_NAME_CONTACT_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	'owner_bad_vehicle_2_name_contact' => 
		array (
		  'inline_edit' => '1',
		  'populate_list' => 
		  array (
			0 => 'fml_name',
			1 => 'id',
			2 => 'full_address',
			3 => 'middle_name',
		  ),
		  'field_list' => 
		  array (
			0 => 'owner_bad_vehicle_2_name_contact',
			1 => 'owner_bad_vehicle_2_name_person_id',
			2 => 'z_owner_bad_vehicle_2_addres_c',
			3 => 'z_owner_bad_vehicle_2_nickna_c',
		  ),
		  'rname' => 'fml_name',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'owner_bad_vehicle_2_name_contact',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_2_NAME_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'owner_bad_vehicle_2_name_person_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	'owner_bad_vehicle_2_name_person_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'owner_bad_vehicle_2_name_person_id',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_2_NAME_PERSON_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	 'owner_bad_vehicle_3_name_contact' => 
		array (
		  'inline_edit' => '1',
		  'populate_list' => 
		  array (
			0 => 'fml_name',
			1 => 'id',
			2 => 'full_address',
			3 => 'middle_name',
		  ),
		  'field_list' => 
		  array (
			0 => 'owner_bad_vehicle_3_name_contact',
			1 => 'owner_bad_vehicle_3_name_person_id',
			2 => 'z_owner_bad_vehicle_3_addres_c',
			3 => 'z_owner_bad_vehicle_3_nickna_c',
		  ),
		  'rname' => 'fml_name',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'owner_bad_vehicle_3_name_contact',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_3_NAME_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'owner_bad_vehicle_3_name_contact_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	
	'owner_bad_vehicle_3_name_contact_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'owner_bad_vehicle_3_name_contact_id',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_3_NAME_PERSON_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		), 
		'owner_bad_vehicle_4_name_contact' => 
		array (
		  'inline_edit' => '1',
		  'populate_list' => 
		  array (
			0 => 'fml_name',
			1 => 'id',
			2 => 'full_address',
			3 => 'middle_name',
		  ),
		  'field_list' => 
		  array (
			0 => 'owner_bad_vehicle_4_name_contact',
			1 => 'owner_bad_vehicle_4_name_person_id',
			2 => 'z_owner_bad_vehicle_4_addres_c',
			3 => 'z_owner_bad_vehicle_4_nickna_c',
		  ),
		  'rname' => 'fml_name',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'owner_bad_vehicle_4_name_contact',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_4_NAME_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'owner_bad_vehicle_4_name_person_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	
	'owner_bad_vehicle_4_name_person_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'owner_bad_vehicle_4_name_person_id',
		  'vname' => 'LBL_OWNER_BAD_VEHICLE_4_NAME_PERSON_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	'um_settled_with_not_suing_contact' => 
		array (
		  'inline_edit' => '1',
		  'required' => false,
		  'source' => 'non-db',
		  'name' => 'um_settled_with_not_suing_contact',
		  'vname' => 'LBL_UM_SETTLED_WITH_NOT_SUING_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'um_settled_with_not_suing_organization_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'fml_name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	
	'um_settled_with_not_suing_organization_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'um_settled_with_not_suing_organization_id',
		  'vname' => 'LBL_UM_SETTLED_WITH_NOT_SUING_ORGANIZATION_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	'property_owner_where_p_was_i_c_contact' => 
		array (
		  'inline_edit' => '1',
		  'required' => false,
		  'populate_list' => 
			  array (
				0 => 'fml_name',
				1 => 'id',
				2 => 'middle_name',
				3 => 'full_address',
			  ),
		  'field_list' => 
			  array (
				0 => 'property_owner_where_p_was_i_c_contact',
				1 => 'property_owner_where_p_was_i_c_contact_id',
				2 => 'z_property_owner_nickname_c',
				3 => 'owner_of_property_address_c',
			  ),
		  'source' => 'non-db',
		  'name' => 'property_owner_where_p_was_i_c_contact',
		  'vname' => 'LBL_PROPERTY_OWNER_WHERE_P_WAS_I_C_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'property_owner_where_p_was_i_c_contact_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'fml_name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	
	'property_owner_where_p_was_i_c_contact_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'property_owner_where_p_was_i_c_contact_id',
		  'vname' => 'LBL_PROPERTY_OWNER_WHERE_P_WAS_I_C_CONTACT_IF',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	'property_manager_where_p_inj_c_contact' => 
		array (
		  'inline_edit' => '1',
		  'required' => false,
			'populate_list' => 
			  array (
				0 => 'fml_name',
				1 => 'id',
				2 => 'middle_name',
				3 => 'full_address',
			  ),
		  'field_list' => 
			  array (
				0 => 'property_manager_where_p_inj_c_contact',
				1 => 'property_manager_where_p_inj_c_contact_id',
				2 => 'z_property_manager_nickname_c',
				3 => 'property_manager_address_c',
			  ),
		  'source' => 'non-db',
		  'name' => 'property_manager_where_p_inj_c_contact',
		  'vname' => 'LBL_PROPERTY_MANAGER_WHERE_P_INJ_C_CONTACT',
		  'type' => 'relate',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => true,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '255',
		  'size' => '20',
		  'id_name' => 'property_manager_where_p_inj_c_contact_id',
		  'ext2' => 'Contacts',
		  'module' => 'Contacts',
		  'rname' => 'fml_name',
		  'quicksearch' => 'enabled',
		  'studio' => 'visible',
		),
	
	'property_manager_where_p_inj_c_contact_id' => 
		array (
		  'inline_edit' => 1,
		  'required' => false,
		  'name' => 'property_manager_where_p_inj_c_contact_id',
		  'vname' => 'LBL_PROPERTY_MANAGER_WHERE_P_INJ_C_CONTACT_ID',
		  'type' => 'id',
		  'massupdate' => '0',
		  'default' => NULL,
		  'no_default' => false,
		  'comments' => '',
		  'help' => '',
		  'importable' => 'true',
		  'duplicate_merge' => 'disabled',
		  'duplicate_merge_dom_value' => '0',
		  'audited' => false,
		  'reportable' => false,
		  'unified_search' => false,
		  'merge_filter' => 'disabled',
		  'len' => '40',
		  'size' => '20',
		),
	),
    'indices' => array(
        array('name' => 'complaint_number', 'type' => 'index', 'fields' => array('complaint_number')),
        array('name' => 'idx_complaint_name', 'type' => 'index', 'fields' => array('name')),
        array('name' => 'idx_account_id', 'type' => 'index', 'fields' => array('account_id')),
        array(
            'name' => 'idx_complaints_stat_del',
            'type' => 'index',
            'fields' => array('assigned_user_id', 'status', 'deleted')
        ),
    ),
    'relationships' => array(
        'complaint_calls' => array(
            'lhs_module' => 'Complaints',
            'lhs_table' => 'complaints',
            'lhs_key' => 'id',
            'rhs_module' => 'Calls',
            'rhs_table' => 'calls',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Complaints'
        ),
        'complaint_tasks' => array(
            'lhs_module' => 'Complaints',
            'lhs_table' => 'complaints',
            'lhs_key' => 'id',
            'rhs_module' => 'Tasks',
            'rhs_table' => 'tasks',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Complaints'
        ),
        'complaint_notes' => array(
            'lhs_module' => 'Complaints',
            'lhs_table' => 'complaints',
            'lhs_key' => 'id',
            'rhs_module' => 'Notes',
            'rhs_table' => 'notes',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Complaints'
        ),
        'complaint_meetings' => array(
            'lhs_module' => 'Complaints',
            'lhs_table' => 'complaints',
            'lhs_key' => 'id',
            'rhs_module' => 'Meetings',
            'rhs_table' => 'meetings',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Complaints'
        ),
        'complaint_emails' => array(
            'lhs_module' => 'Complaints',
            'lhs_table' => 'complaints',
            'lhs_key' => 'id',
            'rhs_module' => 'Emails',
            'rhs_table' => 'emails',
            'rhs_key' => 'parent_id',
            'relationship_type' => 'one-to-many',
            'relationship_role_column' => 'parent_type',
            'relationship_role_column_value' => 'Complaints'
        ),
        'complaints_assigned_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Complaints',
            'rhs_table' => 'complaints',
            'rhs_key' => 'assigned_user_id',
            'relationship_type' => 'one-to-many'
        ),
        'complaints_modified_user' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Complaints',
            'rhs_table' => 'complaints',
            'rhs_key' => 'modified_user_id',
            'relationship_type' => 'one-to-many'
        ),
        'complaints_created_by' => array(
            'lhs_module' => 'Users',
            'lhs_table' => 'users',
            'lhs_key' => 'id',
            'rhs_module' => 'Complaints',
            'rhs_table' => 'complaints',
            'rhs_key' => 'created_by',
            'relationship_type' => 'one-to-many'
        ),

        'complaints_created_contact' => array(
            'lhs_module' => 'Contacts',
            'lhs_table' => 'contacts',
            'lhs_key' => 'id',
            'rhs_module' => 'Complaints',
            'rhs_table' => 'complaints',
            'rhs_key' => 'contact_created_by_id',
            'relationship_type' => 'one-to-many',
        ),
    ),
    'optimistic_locking' => true,
);
VardefManager::createVardef(
    'Complaints',
    'Complaint',
    array(
        'default',
        'assignable',
        'security_groups',
        'issue',
    ),
    'complaint'
);
